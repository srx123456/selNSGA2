@startuml
actor       m       as c order 0
participant s1        as s1 order 1
participant s2        as s2 order 2
participant s3        as s3 order 3
participant s4        as s4 order 4
database    s     as s order 5
collections 目录服务器   as ml order 6
group register
s1 -> ml : restart auto register
s2 -> ml : restart auto register
s3 -> ml : restart auto register
s4 -> ml : restart auto register
s -> ml : server manual register
end
group service
group ml select manually or randomly
end
group client request
end
group UDP message transmission
end
group update services after 1 day
group ml select manually
end
group client request
end
group UDP message transmission
end
end
end

newpage

group ml select manually or randomly
ml -> s4 : select first node
s4 o<->o s1 : IPSec start
s4 --> s1 : wait for forward
s4 o-> ml : auto upload data by gRPC async
ml -> ml : update and \nshow all paths async
activate ml
ml -> s1 : select last node and start forward
s1 o<->o s : IPSec start
s1 --> s : wait for forward
s1 o-> ml : auto upload data by gRPC async
deactivate ml
ml -> ml : update and \nshow all paths async
activate ml
end

group client request
c ->x ml : request service [serverID]
c -> ml : request service again[serverID]
ml -> c : response [sor4-IP:PORT]
c --> s4 : build UDP connection!
end
group UDP message transmission
c <-->(10) s4 : send UDP message
s4 <-->(10) s1 : forward ESP(UDP) message
s1 <-->(10) s : deliver ESP(UDP) message
end
deactivate ml


'group service
'group ml select manually
'ml -> s4 : manual select first node
's4 o<->o s1 : IPSec start
's4 --> s1 : wait for forward
's4 o-> ml : auto upload data by gRPC async
'ml -> ml : update and \nshow all paths async
'activate ml
'ml -> s1 : manual select last node and start forward
's1 o<->o s : IPSec start
's1 --> s : wait for forward
's1 o-> ml : auto upload data by gRPC async
'deactivate ml
'ml -> ml : update and \nshow all paths async
'activate ml
'end
'group client request
'c ->x ml : request service [serverID]
'c -> ml : request service again[serverID]
'ml -> c : response [sor4-IP:PORT]
'c --> s4 : build UDP connection!
'end
'group UDP message transmission
'c <-->(10) s4 : send UDP message
's4 <-->(10) s1 : forward ESP(UDP) message
's1 <-->(10) s : deliver ESP(UDP) message
'end
'deactivate ml
'
'group update services after 1 day
'group ml select manually
'end
'group client request
'end
'group UDP message transmission
'end
'end
'end
@enduml
